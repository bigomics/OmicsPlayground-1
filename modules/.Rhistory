5+5
setwd("/Users/Murodzhon/Desktop/IRB/Roger-webapp/arg/Shiny/")
log(1)
log(1.1)
log(2)
install.packages("kableExtra")
library(kableExtra)
as.character(1:nrow(res))
library(grid)
setwd("/Users/Murodzhon/Desktop/OP/competitor_analysis/")
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
col = rep("black", length(lab))
col[c(1,10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
col = rep("black", length(lab))
col[c(1,10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Omics \n Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
col = rep("black", length(lab))
col[c(1,10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
#colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Omics \n Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
y[1] = y[1] + 0.2
col = rep("black", length(lab))
#col[c(1,10,11,12)] = "blue"
col[c(10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
#colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Omics \n Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
#colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Omics \n Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
y[1] = y[1] + 0.2
col = rep("black", length(lab))
#col[c(1,10,11,12)] = "blue"
col[c(10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
#colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Omics \n Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
y[1] = y[1] + 0.07
col = rep("black", length(lab))
#col[c(1,10,11,12)] = "blue"
col[c(10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
y[1] = y[1] + 0.06
col = rep("black", length(lab))
#col[c(1,10,11,12)] = "blue"
col[c(10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
#colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Omics \n Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
y[1] = y[1] + 0.05
col = rep("black", length(lab))
#col[c(1,10,11,12)] = "blue"
col[c(10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
#colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Omics \n Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
y[1] = y[1] + 0.035
col = rep("black", length(lab))
#col[c(1,10,11,12)] = "blue"
col[c(10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
#colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Omics \n Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
y[1] = y[1] + 0.04
col = rep("black", length(lab))
#col[c(1,10,11,12)] = "blue"
col[c(10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
#colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Omics \n Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
y[1] = y[1] + 0.04
col = rep("black", length(lab))
#col[c(1,10,11,12)] = "blue"
#col[c(10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
mt = read.csv("competition.csv", stringsAsFactors = F, header = T)
dim(mt)
nm = mt[,1]
mt = mt[,-1]
dim(mt)
rownames(mt) = as.character(nm)
head(mt)
#colnames(mt)[c(1,6,9)] =c("BigOmics","Network Analyst","Shiny NGS")
colnames(mt)[c(1,6,9)] =c("Omics \n Playground","Network Analyst","Shiny NGS")
pca = prcomp(mt)
pca$rotation
par(mgp=c(0.5,0.5,0))
plot(-pca$rotation[,1:2], cex=1, xlim = c(-0.45,-0.02), ylim = c(-0.41,0.55),
xaxt='n', yaxt='n', cex.lab=1.4, pch=19, col=col)
lab=colnames(mt)
x = -pca$rotation[,1]
y = -pca$rotation[,2]+0.03
x[10] = x[10]+0.02
x[c(4,9)] = x[c(4,9)]- 0.018
y[5] = y[5] - 2*0.03
y[1] = y[1] + 0.04
col = rep("black", length(lab))
#col[c(1,10,11,12)] = "blue"
#col[c(10,11,12)] = "blue"
text(x, y, lab, cex= 1.6, col = col)
install.packages("webshot")
library(webshot)
getwd()
webshot("https://www.r-project.org/", "r.pdf")
webshot::install_phantomjs()
webshot("https://www.r-project.org/", "r.pdf")
webshot("https://www.r-project.org/", "r.png")
webshot("https://www.google.com/", "google.pdf")
webshot("http://bach.irb.usi.ch/playground/", "playground.pdf")
webshot("http://bach.irb.usi.ch/playground/#section-data-table/", "playground_datatab.pdf")
webshot("https://www.immunomics.ch/tcells/", "tcells.pdf")
webshot("https://www.immunomics.ch/tcells/", "tcells.png")
appdir <- system.file("examples", "01_hello", package="shiny")
appshot(appdir, "01_hello.png")
library(shiny)
input_file <- system.file("examples/knitr-minimal.Rmd", package = "knitr")
rmdshot(input_file, "minimal_rmd.png")
install.packages("rmarkdown")
input_file <- system.file("examples/knitr-minimal.Rmd", package = "knitr")
rmdshot(input_file, "minimal_rmd.png")
getwd()
input_file <- system.file("examples/shiny.Rmd", package = "webshot")
rmdshot(input_file, "shiny_rmd.png", delay = 5)
input_file
??available_port
port
input_file <- system.file("examples/shiny.Rmd", package = "webshot")
rmdshot(input_file, "shiny_rmd.png")
library(webshot)
input_file
webshot("https://www.immunomics.ch/tcells/", "tcells.png", delay = 60)
webshot("https://www.immunomics.ch/tcells/", "tcells.pdf", vwidth = 1300, vheight = 742, delay = 60)
webshot("https://www.immunomics.ch/tcells/", "tcells.png", vwidth = 1300, vheight = 742, delay = 30)
webshot("https://www.immunomics.ch/tcells/", "tcells.png", vwidth = 3000, vheight = 1712, delay = 30)
webshot("http://bach.irb.usi.ch/playground/#section-data-table/", "playground_datatab.png", vwidth = 3000, vheight = 1712, delay = 100)
webshot("http://bach.irb.usi.ch/playground/#section-data-table/", "playground_datatab.png", vwidth = 3000, vheight = 1712, delay = 200)
lg = readRDS("../../../Downloads/Jane Doe 1_logs.rds")
lg
getwd()
devtools::install_github("DivadNojnarg/CaPO4Sim")
install.packages("devtools")
getwd()
setwd("../../../Documents/OmicsPlayground/modules/")
